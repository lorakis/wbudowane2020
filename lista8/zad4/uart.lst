   1               		.file	"uart.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
 182               	.global	uart_transmit
 184               	uart_transmit:
 185               		.stabd	46,0,0
   1:uart.c        **** #include "FreeRTOS.h"
   2:uart.c        **** #include "task.h"
   3:uart.c        **** #include <avr/io.h>
   4:uart.c        **** #include <stdio.h>
   5:uart.c        **** #include "uart.h"
   6:uart.c        **** #ifndef F_CPU
   7:uart.c        **** #define F_CPU 16000000UL
   8:uart.c        **** #endif
   9:uart.c        **** #ifndef BAUD
  10:uart.c        **** #define BAUD 9600
  11:uart.c        **** #endif
  12:uart.c        **** #include <util/setbaud.h>
  13:uart.c        **** 
  14:uart.c        **** int uart_transmit(char c, FILE *stream);
  15:uart.c        **** int uart_receive(FILE *stream);
  16:uart.c        **** 
  17:uart.c        **** FILE uart_file = FDEV_SETUP_STREAM(uart_transmit, uart_receive, _FDEV_SETUP_RW);
  18:uart.c        **** 
  19:uart.c        **** void uart_init() {
  20:uart.c        ****   UBRR0H = UBRRH_VALUE;
  21:uart.c        ****   UBRR0L = UBRRL_VALUE;
  22:uart.c        **** #if USE_2X
  23:uart.c        ****   UCSR0A |= _BV(U2X0);
  24:uart.c        **** #else
  25:uart.c        ****   UCSR0A &= ~(_BV(U2X0));
  26:uart.c        **** #endif
  27:uart.c        ****   UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
  28:uart.c        ****   UCSR0B = _BV(RXEN0) | _BV(TXEN0); /* Enable RX and TX */
  29:uart.c        **** }
  30:uart.c        **** 
  31:uart.c        **** int uart_transmit(char c, FILE *stream) {
 187               	.LM0:
 188               	.LFBB1:
 189 0000 CF93      		push r28
 190               	/* prologue: function */
 191               	/* frame size = 0 */
 192               	/* stack size = 1 */
 193               	.L__stack_usage = 1
 194 0002 C82F      		mov r28,r24
 195               	.L2:
  32:uart.c        ****   while (!(UCSR0A & _BV(UDRE0))) taskYIELD();
 197               	.LM1:
 198 0004 8091 C000 		lds r24,192
 199 0008 85FD      		sbrc r24,5
 200 000a 00C0      		rjmp .L5
 202               	.LM2:
 203 000c 0E94 0000 		call vPortYield
 204 0010 00C0      		rjmp .L2
 205               	.L5:
  33:uart.c        ****   UDR0 = c;
 207               	.LM3:
 208 0012 C093 C600 		sts 198,r28
  34:uart.c        ****   return 0;
  35:uart.c        **** }
 210               	.LM4:
 211 0016 80E0      		ldi r24,0
 212 0018 90E0      		ldi r25,0
 213               	/* epilogue start */
 214 001a CF91      		pop r28
 215 001c 0895      		ret
 217               	.Lscope1:
 219               		.stabd	78,0,0
 222               	.global	uart_receive
 224               	uart_receive:
 225               		.stabd	46,0,0
  36:uart.c        **** 
  37:uart.c        **** int uart_receive(FILE *stream) {
 227               	.LM5:
 228               	.LFBB2:
 229               	/* prologue: function */
 230               	/* frame size = 0 */
 231               	/* stack size = 0 */
 232               	.L__stack_usage = 0
 233               	.L7:
  38:uart.c        ****   while (!(UCSR0A & _BV(RXC0))) taskYIELD();
 235               	.LM6:
 236 001e 8091 C000 		lds r24,192
 237 0022 87FD      		sbrc r24,7
 238 0024 00C0      		rjmp .L9
 240               	.LM7:
 241 0026 0E94 0000 		call vPortYield
 242 002a 00C0      		rjmp .L7
 243               	.L9:
  39:uart.c        ****   return UDR0;
 245               	.LM8:
 246 002c 8091 C600 		lds r24,198
  40:uart.c        **** }
 248               	.LM9:
 249 0030 90E0      		ldi r25,0
 250 0032 0895      		ret
 252               	.Lscope2:
 254               		.stabd	78,0,0
 256               	.global	uart_init
 258               	uart_init:
 259               		.stabd	46,0,0
  19:uart.c        ****   UBRR0H = UBRRH_VALUE;
 261               	.LM10:
 262               	.LFBB3:
 263               	/* prologue: function */
 264               	/* frame size = 0 */
 265               	/* stack size = 0 */
 266               	.L__stack_usage = 0
  20:uart.c        ****   UBRR0L = UBRRL_VALUE;
 268               	.LM11:
 269 0034 1092 C500 		sts 197,__zero_reg__
  21:uart.c        **** #if USE_2X
 271               	.LM12:
 272 0038 87E6      		ldi r24,lo8(103)
 273 003a 8093 C400 		sts 196,r24
  25:uart.c        **** #endif
 275               	.LM13:
 276 003e E0EC      		ldi r30,lo8(-64)
 277 0040 F0E0      		ldi r31,0
 278 0042 8081      		ld r24,Z
 279 0044 8D7F      		andi r24,lo8(-3)
 280 0046 8083      		st Z,r24
  27:uart.c        ****   UCSR0B = _BV(RXEN0) | _BV(TXEN0); /* Enable RX and TX */
 282               	.LM14:
 283 0048 86E0      		ldi r24,lo8(6)
 284 004a 8093 C200 		sts 194,r24
  28:uart.c        **** }
 286               	.LM15:
 287 004e 88E1      		ldi r24,lo8(24)
 288 0050 8093 C100 		sts 193,r24
 289 0054 0895      		ret
 291               	.Lscope3:
 293               		.stabd	78,0,0
 294               	.global	uart_file
 295               		.data
 298               	uart_file:
 299 0000 0000 00   		.zero	3
 300 0003 03        		.byte	3
 301 0004 0000 0000 		.zero	4
 302 0008 0000      		.word	gs(uart_transmit)
 303 000a 0000      		.word	gs(uart_receive)
 304 000c 0000      		.word	0
 306               		.text
 308               	.Letext0:
 309               		.ident	"GCC: (GNU) 5.4.0"
 310               	.global __do_copy_data
DEFINED SYMBOLS
                            *ABS*:0000000000000000 uart.c
     /tmp/ccPsEiEC.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccPsEiEC.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccPsEiEC.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccPsEiEC.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccPsEiEC.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccPsEiEC.s:184    .text:0000000000000000 uart_transmit
     /tmp/ccPsEiEC.s:224    .text:000000000000001e uart_receive
     /tmp/ccPsEiEC.s:258    .text:0000000000000034 uart_init
     /tmp/ccPsEiEC.s:298    .data:0000000000000000 uart_file

UNDEFINED SYMBOLS
vPortYield
__do_copy_data
