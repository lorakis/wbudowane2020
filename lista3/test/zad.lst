
zad.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  00000772  00000806  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000772  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800110  00800110  00000816  2**0
                  ALLOC
  3 .stab         000007e0  00000000  00000000  00000818  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000e8d  00000000  00000000  00000ff8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00001e85  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001e98  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  00001ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  000024cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  00002a6e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  00002a88  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e7       	ldi	r30, 0x72	; 114
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 31       	cpi	r26, 0x10	; 16
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e1       	ldi	r26, 0x10	; 16
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 32       	cpi	r26, 0x24	; 36
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 7f 00 	call	0xfe	; 0xfe <main>
  9e:	0c 94 b7 03 	jmp	0x76e	; 0x76e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_transmit>:

//transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
    //czekaj aż transmiter gotowy
    while(!(UCSR0A & _BV(UDRE0)));
  a6:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
  aa:	95 ff       	sbrs	r25, 5
  ac:	fc cf       	rjmp	.-8      	; 0xa6 <uart_transmit>
    UDR0 = data;
  ae:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    return 0;
}
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	08 95       	ret

000000b8 <uart_receive>:

//odczyt jednego znaku
int uart_receive(FILE *stream)
{
    //czekaj aż znak dostępny
    while(!(UCSR0A & _BV(RXC0)));
  b8:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
  bc:	87 ff       	sbrs	r24, 7
  be:	fc cf       	rjmp	.-8      	; 0xb8 <uart_receive>
    return UDR0;
  c0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	08 95       	ret

000000c8 <uart_init>:

//inicializacja UART
void uart_init()
{
    //ustaw baudrate
    UBRR0 = UBRR_VALUE;
  c8:	87 e6       	ldi	r24, 0x67	; 103
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  d0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    //włącz odbiornik i nadajnik
    UCSR0B = _BV(RXEN0) | _BV(TXEN0);
  d4:	88 e1       	ldi	r24, 0x18	; 24
  d6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    //ustaw format 8n1
    UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
  da:	86 e0       	ldi	r24, 0x06	; 6
  dc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  e0:	08 95       	ret

000000e2 <adc_init>:
}

//inicjalizacja ADC
void adc_init()
{
    ADMUX = _BV(REFS0); //referencja AVcc, wejście ADC0
  e2:	80 e4       	ldi	r24, 0x40	; 64
  e4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    DIDR0 = _BV(ADC0D); //wyłącz wejście cyfrowe na ADC0
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
    //częstotliwość zegara ADC 125kHz (16MHz / 128)
    ADCSRA = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2); //presklaer 128
  ee:	ea e7       	ldi	r30, 0x7A	; 122
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	87 e0       	ldi	r24, 0x07	; 7
  f4:	80 83       	st	Z, r24
    ADCSRA |= _BV(ADEN); //wyłącz ADC
  f6:	80 81       	ld	r24, Z
  f8:	80 68       	ori	r24, 0x80	; 128
  fa:	80 83       	st	Z, r24
  fc:	08 95       	ret

000000fe <main>:

//inicializacja UART
void uart_init()
{
    //ustaw baudrate
    UBRR0 = UBRR_VALUE;
  fe:	87 e6       	ldi	r24, 0x67	; 103
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 106:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    //włącz odbiornik i nadajnik
    UCSR0B = _BV(RXEN0) | _BV(TXEN0);
 10a:	88 e1       	ldi	r24, 0x18	; 24
 10c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    //ustaw format 8n1
    UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
 110:	86 e0       	ldi	r24, 0x06	; 6
 112:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
int main()
{
    //zainicjalizuj UART
    uart_init();
    //sonfiguruj strumienie wejścia/wyjścia
    fdev_setup_stream(&uart_file, uart_transmit, uart_receive, _FDEV_SETUP_RW);
 116:	80 e1       	ldi	r24, 0x10	; 16
 118:	91 e0       	ldi	r25, 0x01	; 1
 11a:	23 e5       	ldi	r18, 0x53	; 83
 11c:	30 e0       	ldi	r19, 0x00	; 0
 11e:	30 93 19 01 	sts	0x0119, r19	; 0x800119 <__data_end+0x9>
 122:	20 93 18 01 	sts	0x0118, r18	; 0x800118 <__data_end+0x8>
 126:	2c e5       	ldi	r18, 0x5C	; 92
 128:	30 e0       	ldi	r19, 0x00	; 0
 12a:	30 93 1b 01 	sts	0x011B, r19	; 0x80011b <__data_end+0xb>
 12e:	20 93 1a 01 	sts	0x011A, r18	; 0x80011a <__data_end+0xa>
 132:	23 e0       	ldi	r18, 0x03	; 3
 134:	20 93 13 01 	sts	0x0113, r18	; 0x800113 <__data_end+0x3>
 138:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <__data_end+0xd>
 13c:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <__data_end+0xc>
    stdin = stdout = stderr = &uart_file;
 140:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <__iob+0x5>
 144:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <__iob+0x4>
 148:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <__iob+0x3>
 14c:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__iob+0x2>
 150:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <__iob+0x1>
 154:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__iob>
}

//inicjalizacja ADC
void adc_init()
{
    ADMUX = _BV(REFS0); //referencja AVcc, wejście ADC0
 158:	80 e4       	ldi	r24, 0x40	; 64
 15a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    DIDR0 = _BV(ADC0D); //wyłącz wejście cyfrowe na ADC0
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
    //częstotliwość zegara ADC 125kHz (16MHz / 128)
    ADCSRA = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2); //presklaer 128
 164:	87 e0       	ldi	r24, 0x07	; 7
 166:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    ADCSRA |= _BV(ADEN); //wyłącz ADC
 16a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 16e:	80 68       	ori	r24, 0x80	; 128
 170:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
        ADCSRA |= _BV(ADSC); //wykonaj konwersję
        //while(ADCSRA & _BV(ADSC));
        while(!(ADCSRA & _BV(ADIF))); //czekaj na wynik
        ADCSRA |= _BV(ADIF); //wyczyść bit ADIF (pisząc 1!) 
        uint16_t v = ADC; //weź zmierzoną wartość (0..1023)
        printf("Odczytano: %"PRIu16"\r\n", v);
 174:	c0 e0       	ldi	r28, 0x00	; 0
 176:	d1 e0       	ldi	r29, 0x01	; 1
    stdin = stdout = stderr = &uart_file;
    //zainicjalizuj ADC
    adc_init();
    //mierz napięcie
    while(1){
        ADCSRA |= _BV(ADSC); //wykonaj konwersję
 178:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 17c:	80 64       	ori	r24, 0x40	; 64
 17e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
        //while(ADCSRA & _BV(ADSC));
        while(!(ADCSRA & _BV(ADIF))); //czekaj na wynik
 182:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 186:	84 ff       	sbrs	r24, 4
 188:	fc cf       	rjmp	.-8      	; 0x182 <main+0x84>
        ADCSRA |= _BV(ADIF); //wyczyść bit ADIF (pisząc 1!) 
 18a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 18e:	80 61       	ori	r24, 0x10	; 16
 190:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
        uint16_t v = ADC; //weź zmierzoną wartość (0..1023)
 194:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 198:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
        printf("Odczytano: %"PRIu16"\r\n", v);
 19c:	9f 93       	push	r25
 19e:	8f 93       	push	r24
 1a0:	df 93       	push	r29
 1a2:	cf 93       	push	r28
 1a4:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <printf>
    }
 1a8:	0f 90       	pop	r0
 1aa:	0f 90       	pop	r0
 1ac:	0f 90       	pop	r0
 1ae:	0f 90       	pop	r0
 1b0:	e3 cf       	rjmp	.-58     	; 0x178 <main+0x7a>

000001b2 <printf>:
 1b2:	a0 e0       	ldi	r26, 0x00	; 0
 1b4:	b0 e0       	ldi	r27, 0x00	; 0
 1b6:	ef ed       	ldi	r30, 0xDF	; 223
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	0c 94 90 03 	jmp	0x720	; 0x720 <__prologue_saves__+0x20>
 1be:	ae 01       	movw	r20, r28
 1c0:	4b 5f       	subi	r20, 0xFB	; 251
 1c2:	5f 4f       	sbci	r21, 0xFF	; 255
 1c4:	fa 01       	movw	r30, r20
 1c6:	61 91       	ld	r22, Z+
 1c8:	71 91       	ld	r23, Z+
 1ca:	af 01       	movw	r20, r30
 1cc:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__iob+0x2>
 1d0:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__iob+0x3>
 1d4:	0e 94 ef 00 	call	0x1de	; 0x1de <vfprintf>
 1d8:	e2 e0       	ldi	r30, 0x02	; 2
 1da:	0c 94 ac 03 	jmp	0x758	; 0x758 <__epilogue_restores__+0x20>

000001de <vfprintf>:
 1de:	ab e0       	ldi	r26, 0x0B	; 11
 1e0:	b0 e0       	ldi	r27, 0x00	; 0
 1e2:	e5 ef       	ldi	r30, 0xF5	; 245
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	0c 94 80 03 	jmp	0x700	; 0x700 <__prologue_saves__>
 1ea:	6c 01       	movw	r12, r24
 1ec:	7b 01       	movw	r14, r22
 1ee:	8a 01       	movw	r16, r20
 1f0:	fc 01       	movw	r30, r24
 1f2:	17 82       	std	Z+7, r1	; 0x07
 1f4:	16 82       	std	Z+6, r1	; 0x06
 1f6:	83 81       	ldd	r24, Z+3	; 0x03
 1f8:	81 ff       	sbrs	r24, 1
 1fa:	cc c1       	rjmp	.+920    	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 1fc:	ce 01       	movw	r24, r28
 1fe:	01 96       	adiw	r24, 0x01	; 1
 200:	3c 01       	movw	r6, r24
 202:	f6 01       	movw	r30, r12
 204:	93 81       	ldd	r25, Z+3	; 0x03
 206:	f7 01       	movw	r30, r14
 208:	93 fd       	sbrc	r25, 3
 20a:	85 91       	lpm	r24, Z+
 20c:	93 ff       	sbrs	r25, 3
 20e:	81 91       	ld	r24, Z+
 210:	7f 01       	movw	r14, r30
 212:	88 23       	and	r24, r24
 214:	09 f4       	brne	.+2      	; 0x218 <vfprintf+0x3a>
 216:	ba c1       	rjmp	.+884    	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 218:	85 32       	cpi	r24, 0x25	; 37
 21a:	39 f4       	brne	.+14     	; 0x22a <vfprintf+0x4c>
 21c:	93 fd       	sbrc	r25, 3
 21e:	85 91       	lpm	r24, Z+
 220:	93 ff       	sbrs	r25, 3
 222:	81 91       	ld	r24, Z+
 224:	7f 01       	movw	r14, r30
 226:	85 32       	cpi	r24, 0x25	; 37
 228:	29 f4       	brne	.+10     	; 0x234 <vfprintf+0x56>
 22a:	b6 01       	movw	r22, r12
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	0e 94 e6 02 	call	0x5cc	; 0x5cc <fputc>
 232:	e7 cf       	rjmp	.-50     	; 0x202 <vfprintf+0x24>
 234:	91 2c       	mov	r9, r1
 236:	21 2c       	mov	r2, r1
 238:	31 2c       	mov	r3, r1
 23a:	ff e1       	ldi	r31, 0x1F	; 31
 23c:	f3 15       	cp	r31, r3
 23e:	d8 f0       	brcs	.+54     	; 0x276 <vfprintf+0x98>
 240:	8b 32       	cpi	r24, 0x2B	; 43
 242:	79 f0       	breq	.+30     	; 0x262 <vfprintf+0x84>
 244:	38 f4       	brcc	.+14     	; 0x254 <vfprintf+0x76>
 246:	80 32       	cpi	r24, 0x20	; 32
 248:	79 f0       	breq	.+30     	; 0x268 <vfprintf+0x8a>
 24a:	83 32       	cpi	r24, 0x23	; 35
 24c:	a1 f4       	brne	.+40     	; 0x276 <vfprintf+0x98>
 24e:	23 2d       	mov	r18, r3
 250:	20 61       	ori	r18, 0x10	; 16
 252:	1d c0       	rjmp	.+58     	; 0x28e <vfprintf+0xb0>
 254:	8d 32       	cpi	r24, 0x2D	; 45
 256:	61 f0       	breq	.+24     	; 0x270 <vfprintf+0x92>
 258:	80 33       	cpi	r24, 0x30	; 48
 25a:	69 f4       	brne	.+26     	; 0x276 <vfprintf+0x98>
 25c:	23 2d       	mov	r18, r3
 25e:	21 60       	ori	r18, 0x01	; 1
 260:	16 c0       	rjmp	.+44     	; 0x28e <vfprintf+0xb0>
 262:	83 2d       	mov	r24, r3
 264:	82 60       	ori	r24, 0x02	; 2
 266:	38 2e       	mov	r3, r24
 268:	e3 2d       	mov	r30, r3
 26a:	e4 60       	ori	r30, 0x04	; 4
 26c:	3e 2e       	mov	r3, r30
 26e:	2a c0       	rjmp	.+84     	; 0x2c4 <vfprintf+0xe6>
 270:	f3 2d       	mov	r31, r3
 272:	f8 60       	ori	r31, 0x08	; 8
 274:	1d c0       	rjmp	.+58     	; 0x2b0 <vfprintf+0xd2>
 276:	37 fc       	sbrc	r3, 7
 278:	2d c0       	rjmp	.+90     	; 0x2d4 <vfprintf+0xf6>
 27a:	20 ed       	ldi	r18, 0xD0	; 208
 27c:	28 0f       	add	r18, r24
 27e:	2a 30       	cpi	r18, 0x0A	; 10
 280:	40 f0       	brcs	.+16     	; 0x292 <vfprintf+0xb4>
 282:	8e 32       	cpi	r24, 0x2E	; 46
 284:	b9 f4       	brne	.+46     	; 0x2b4 <vfprintf+0xd6>
 286:	36 fc       	sbrc	r3, 6
 288:	81 c1       	rjmp	.+770    	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 28a:	23 2d       	mov	r18, r3
 28c:	20 64       	ori	r18, 0x40	; 64
 28e:	32 2e       	mov	r3, r18
 290:	19 c0       	rjmp	.+50     	; 0x2c4 <vfprintf+0xe6>
 292:	36 fe       	sbrs	r3, 6
 294:	06 c0       	rjmp	.+12     	; 0x2a2 <vfprintf+0xc4>
 296:	8a e0       	ldi	r24, 0x0A	; 10
 298:	98 9e       	mul	r9, r24
 29a:	20 0d       	add	r18, r0
 29c:	11 24       	eor	r1, r1
 29e:	92 2e       	mov	r9, r18
 2a0:	11 c0       	rjmp	.+34     	; 0x2c4 <vfprintf+0xe6>
 2a2:	ea e0       	ldi	r30, 0x0A	; 10
 2a4:	2e 9e       	mul	r2, r30
 2a6:	20 0d       	add	r18, r0
 2a8:	11 24       	eor	r1, r1
 2aa:	22 2e       	mov	r2, r18
 2ac:	f3 2d       	mov	r31, r3
 2ae:	f0 62       	ori	r31, 0x20	; 32
 2b0:	3f 2e       	mov	r3, r31
 2b2:	08 c0       	rjmp	.+16     	; 0x2c4 <vfprintf+0xe6>
 2b4:	8c 36       	cpi	r24, 0x6C	; 108
 2b6:	21 f4       	brne	.+8      	; 0x2c0 <vfprintf+0xe2>
 2b8:	83 2d       	mov	r24, r3
 2ba:	80 68       	ori	r24, 0x80	; 128
 2bc:	38 2e       	mov	r3, r24
 2be:	02 c0       	rjmp	.+4      	; 0x2c4 <vfprintf+0xe6>
 2c0:	88 36       	cpi	r24, 0x68	; 104
 2c2:	41 f4       	brne	.+16     	; 0x2d4 <vfprintf+0xf6>
 2c4:	f7 01       	movw	r30, r14
 2c6:	93 fd       	sbrc	r25, 3
 2c8:	85 91       	lpm	r24, Z+
 2ca:	93 ff       	sbrs	r25, 3
 2cc:	81 91       	ld	r24, Z+
 2ce:	7f 01       	movw	r14, r30
 2d0:	81 11       	cpse	r24, r1
 2d2:	b3 cf       	rjmp	.-154    	; 0x23a <vfprintf+0x5c>
 2d4:	98 2f       	mov	r25, r24
 2d6:	9f 7d       	andi	r25, 0xDF	; 223
 2d8:	95 54       	subi	r25, 0x45	; 69
 2da:	93 30       	cpi	r25, 0x03	; 3
 2dc:	28 f4       	brcc	.+10     	; 0x2e8 <vfprintf+0x10a>
 2de:	0c 5f       	subi	r16, 0xFC	; 252
 2e0:	1f 4f       	sbci	r17, 0xFF	; 255
 2e2:	9f e3       	ldi	r25, 0x3F	; 63
 2e4:	99 83       	std	Y+1, r25	; 0x01
 2e6:	0d c0       	rjmp	.+26     	; 0x302 <vfprintf+0x124>
 2e8:	83 36       	cpi	r24, 0x63	; 99
 2ea:	31 f0       	breq	.+12     	; 0x2f8 <vfprintf+0x11a>
 2ec:	83 37       	cpi	r24, 0x73	; 115
 2ee:	71 f0       	breq	.+28     	; 0x30c <vfprintf+0x12e>
 2f0:	83 35       	cpi	r24, 0x53	; 83
 2f2:	09 f0       	breq	.+2      	; 0x2f6 <vfprintf+0x118>
 2f4:	59 c0       	rjmp	.+178    	; 0x3a8 <vfprintf+0x1ca>
 2f6:	21 c0       	rjmp	.+66     	; 0x33a <vfprintf+0x15c>
 2f8:	f8 01       	movw	r30, r16
 2fa:	80 81       	ld	r24, Z
 2fc:	89 83       	std	Y+1, r24	; 0x01
 2fe:	0e 5f       	subi	r16, 0xFE	; 254
 300:	1f 4f       	sbci	r17, 0xFF	; 255
 302:	88 24       	eor	r8, r8
 304:	83 94       	inc	r8
 306:	91 2c       	mov	r9, r1
 308:	53 01       	movw	r10, r6
 30a:	13 c0       	rjmp	.+38     	; 0x332 <vfprintf+0x154>
 30c:	28 01       	movw	r4, r16
 30e:	f2 e0       	ldi	r31, 0x02	; 2
 310:	4f 0e       	add	r4, r31
 312:	51 1c       	adc	r5, r1
 314:	f8 01       	movw	r30, r16
 316:	a0 80       	ld	r10, Z
 318:	b1 80       	ldd	r11, Z+1	; 0x01
 31a:	36 fe       	sbrs	r3, 6
 31c:	03 c0       	rjmp	.+6      	; 0x324 <vfprintf+0x146>
 31e:	69 2d       	mov	r22, r9
 320:	70 e0       	ldi	r23, 0x00	; 0
 322:	02 c0       	rjmp	.+4      	; 0x328 <vfprintf+0x14a>
 324:	6f ef       	ldi	r22, 0xFF	; 255
 326:	7f ef       	ldi	r23, 0xFF	; 255
 328:	c5 01       	movw	r24, r10
 32a:	0e 94 db 02 	call	0x5b6	; 0x5b6 <strnlen>
 32e:	4c 01       	movw	r8, r24
 330:	82 01       	movw	r16, r4
 332:	f3 2d       	mov	r31, r3
 334:	ff 77       	andi	r31, 0x7F	; 127
 336:	3f 2e       	mov	r3, r31
 338:	16 c0       	rjmp	.+44     	; 0x366 <vfprintf+0x188>
 33a:	28 01       	movw	r4, r16
 33c:	22 e0       	ldi	r18, 0x02	; 2
 33e:	42 0e       	add	r4, r18
 340:	51 1c       	adc	r5, r1
 342:	f8 01       	movw	r30, r16
 344:	a0 80       	ld	r10, Z
 346:	b1 80       	ldd	r11, Z+1	; 0x01
 348:	36 fe       	sbrs	r3, 6
 34a:	03 c0       	rjmp	.+6      	; 0x352 <vfprintf+0x174>
 34c:	69 2d       	mov	r22, r9
 34e:	70 e0       	ldi	r23, 0x00	; 0
 350:	02 c0       	rjmp	.+4      	; 0x356 <vfprintf+0x178>
 352:	6f ef       	ldi	r22, 0xFF	; 255
 354:	7f ef       	ldi	r23, 0xFF	; 255
 356:	c5 01       	movw	r24, r10
 358:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <strnlen_P>
 35c:	4c 01       	movw	r8, r24
 35e:	f3 2d       	mov	r31, r3
 360:	f0 68       	ori	r31, 0x80	; 128
 362:	3f 2e       	mov	r3, r31
 364:	82 01       	movw	r16, r4
 366:	33 fc       	sbrc	r3, 3
 368:	1b c0       	rjmp	.+54     	; 0x3a0 <vfprintf+0x1c2>
 36a:	82 2d       	mov	r24, r2
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	88 16       	cp	r8, r24
 370:	99 06       	cpc	r9, r25
 372:	b0 f4       	brcc	.+44     	; 0x3a0 <vfprintf+0x1c2>
 374:	b6 01       	movw	r22, r12
 376:	80 e2       	ldi	r24, 0x20	; 32
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	0e 94 e6 02 	call	0x5cc	; 0x5cc <fputc>
 37e:	2a 94       	dec	r2
 380:	f4 cf       	rjmp	.-24     	; 0x36a <vfprintf+0x18c>
 382:	f5 01       	movw	r30, r10
 384:	37 fc       	sbrc	r3, 7
 386:	85 91       	lpm	r24, Z+
 388:	37 fe       	sbrs	r3, 7
 38a:	81 91       	ld	r24, Z+
 38c:	5f 01       	movw	r10, r30
 38e:	b6 01       	movw	r22, r12
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	0e 94 e6 02 	call	0x5cc	; 0x5cc <fputc>
 396:	21 10       	cpse	r2, r1
 398:	2a 94       	dec	r2
 39a:	21 e0       	ldi	r18, 0x01	; 1
 39c:	82 1a       	sub	r8, r18
 39e:	91 08       	sbc	r9, r1
 3a0:	81 14       	cp	r8, r1
 3a2:	91 04       	cpc	r9, r1
 3a4:	71 f7       	brne	.-36     	; 0x382 <vfprintf+0x1a4>
 3a6:	e8 c0       	rjmp	.+464    	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 3a8:	84 36       	cpi	r24, 0x64	; 100
 3aa:	11 f0       	breq	.+4      	; 0x3b0 <vfprintf+0x1d2>
 3ac:	89 36       	cpi	r24, 0x69	; 105
 3ae:	41 f5       	brne	.+80     	; 0x400 <__LOCK_REGION_LENGTH__>
 3b0:	f8 01       	movw	r30, r16
 3b2:	37 fe       	sbrs	r3, 7
 3b4:	07 c0       	rjmp	.+14     	; 0x3c4 <vfprintf+0x1e6>
 3b6:	60 81       	ld	r22, Z
 3b8:	71 81       	ldd	r23, Z+1	; 0x01
 3ba:	82 81       	ldd	r24, Z+2	; 0x02
 3bc:	93 81       	ldd	r25, Z+3	; 0x03
 3be:	0c 5f       	subi	r16, 0xFC	; 252
 3c0:	1f 4f       	sbci	r17, 0xFF	; 255
 3c2:	08 c0       	rjmp	.+16     	; 0x3d4 <vfprintf+0x1f6>
 3c4:	60 81       	ld	r22, Z
 3c6:	71 81       	ldd	r23, Z+1	; 0x01
 3c8:	07 2e       	mov	r0, r23
 3ca:	00 0c       	add	r0, r0
 3cc:	88 0b       	sbc	r24, r24
 3ce:	99 0b       	sbc	r25, r25
 3d0:	0e 5f       	subi	r16, 0xFE	; 254
 3d2:	1f 4f       	sbci	r17, 0xFF	; 255
 3d4:	f3 2d       	mov	r31, r3
 3d6:	ff 76       	andi	r31, 0x6F	; 111
 3d8:	3f 2e       	mov	r3, r31
 3da:	97 ff       	sbrs	r25, 7
 3dc:	09 c0       	rjmp	.+18     	; 0x3f0 <vfprintf+0x212>
 3de:	90 95       	com	r25
 3e0:	80 95       	com	r24
 3e2:	70 95       	com	r23
 3e4:	61 95       	neg	r22
 3e6:	7f 4f       	sbci	r23, 0xFF	; 255
 3e8:	8f 4f       	sbci	r24, 0xFF	; 255
 3ea:	9f 4f       	sbci	r25, 0xFF	; 255
 3ec:	f0 68       	ori	r31, 0x80	; 128
 3ee:	3f 2e       	mov	r3, r31
 3f0:	2a e0       	ldi	r18, 0x0A	; 10
 3f2:	30 e0       	ldi	r19, 0x00	; 0
 3f4:	a3 01       	movw	r20, r6
 3f6:	0e 94 22 03 	call	0x644	; 0x644 <__ultoa_invert>
 3fa:	88 2e       	mov	r8, r24
 3fc:	86 18       	sub	r8, r6
 3fe:	45 c0       	rjmp	.+138    	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 400:	85 37       	cpi	r24, 0x75	; 117
 402:	31 f4       	brne	.+12     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 404:	23 2d       	mov	r18, r3
 406:	2f 7e       	andi	r18, 0xEF	; 239
 408:	b2 2e       	mov	r11, r18
 40a:	2a e0       	ldi	r18, 0x0A	; 10
 40c:	30 e0       	ldi	r19, 0x00	; 0
 40e:	25 c0       	rjmp	.+74     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 410:	93 2d       	mov	r25, r3
 412:	99 7f       	andi	r25, 0xF9	; 249
 414:	b9 2e       	mov	r11, r25
 416:	8f 36       	cpi	r24, 0x6F	; 111
 418:	c1 f0       	breq	.+48     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 41a:	18 f4       	brcc	.+6      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 41c:	88 35       	cpi	r24, 0x58	; 88
 41e:	79 f0       	breq	.+30     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 420:	b5 c0       	rjmp	.+362    	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 422:	80 37       	cpi	r24, 0x70	; 112
 424:	19 f0       	breq	.+6      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 426:	88 37       	cpi	r24, 0x78	; 120
 428:	21 f0       	breq	.+8      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 42a:	b0 c0       	rjmp	.+352    	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 42c:	e9 2f       	mov	r30, r25
 42e:	e0 61       	ori	r30, 0x10	; 16
 430:	be 2e       	mov	r11, r30
 432:	b4 fe       	sbrs	r11, 4
 434:	0d c0       	rjmp	.+26     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 436:	fb 2d       	mov	r31, r11
 438:	f4 60       	ori	r31, 0x04	; 4
 43a:	bf 2e       	mov	r11, r31
 43c:	09 c0       	rjmp	.+18     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 43e:	34 fe       	sbrs	r3, 4
 440:	0a c0       	rjmp	.+20     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 442:	29 2f       	mov	r18, r25
 444:	26 60       	ori	r18, 0x06	; 6
 446:	b2 2e       	mov	r11, r18
 448:	06 c0       	rjmp	.+12     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 44a:	28 e0       	ldi	r18, 0x08	; 8
 44c:	30 e0       	ldi	r19, 0x00	; 0
 44e:	05 c0       	rjmp	.+10     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 450:	20 e1       	ldi	r18, 0x10	; 16
 452:	30 e0       	ldi	r19, 0x00	; 0
 454:	02 c0       	rjmp	.+4      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 456:	20 e1       	ldi	r18, 0x10	; 16
 458:	32 e0       	ldi	r19, 0x02	; 2
 45a:	f8 01       	movw	r30, r16
 45c:	b7 fe       	sbrs	r11, 7
 45e:	07 c0       	rjmp	.+14     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 460:	60 81       	ld	r22, Z
 462:	71 81       	ldd	r23, Z+1	; 0x01
 464:	82 81       	ldd	r24, Z+2	; 0x02
 466:	93 81       	ldd	r25, Z+3	; 0x03
 468:	0c 5f       	subi	r16, 0xFC	; 252
 46a:	1f 4f       	sbci	r17, 0xFF	; 255
 46c:	06 c0       	rjmp	.+12     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 46e:	60 81       	ld	r22, Z
 470:	71 81       	ldd	r23, Z+1	; 0x01
 472:	80 e0       	ldi	r24, 0x00	; 0
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	0e 5f       	subi	r16, 0xFE	; 254
 478:	1f 4f       	sbci	r17, 0xFF	; 255
 47a:	a3 01       	movw	r20, r6
 47c:	0e 94 22 03 	call	0x644	; 0x644 <__ultoa_invert>
 480:	88 2e       	mov	r8, r24
 482:	86 18       	sub	r8, r6
 484:	fb 2d       	mov	r31, r11
 486:	ff 77       	andi	r31, 0x7F	; 127
 488:	3f 2e       	mov	r3, r31
 48a:	36 fe       	sbrs	r3, 6
 48c:	0d c0       	rjmp	.+26     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 48e:	23 2d       	mov	r18, r3
 490:	2e 7f       	andi	r18, 0xFE	; 254
 492:	a2 2e       	mov	r10, r18
 494:	89 14       	cp	r8, r9
 496:	58 f4       	brcc	.+22     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 498:	34 fe       	sbrs	r3, 4
 49a:	0b c0       	rjmp	.+22     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 49c:	32 fc       	sbrc	r3, 2
 49e:	09 c0       	rjmp	.+18     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4a0:	83 2d       	mov	r24, r3
 4a2:	8e 7e       	andi	r24, 0xEE	; 238
 4a4:	a8 2e       	mov	r10, r24
 4a6:	05 c0       	rjmp	.+10     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4a8:	b8 2c       	mov	r11, r8
 4aa:	a3 2c       	mov	r10, r3
 4ac:	03 c0       	rjmp	.+6      	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4ae:	b8 2c       	mov	r11, r8
 4b0:	01 c0       	rjmp	.+2      	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4b2:	b9 2c       	mov	r11, r9
 4b4:	a4 fe       	sbrs	r10, 4
 4b6:	0f c0       	rjmp	.+30     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4b8:	fe 01       	movw	r30, r28
 4ba:	e8 0d       	add	r30, r8
 4bc:	f1 1d       	adc	r31, r1
 4be:	80 81       	ld	r24, Z
 4c0:	80 33       	cpi	r24, 0x30	; 48
 4c2:	21 f4       	brne	.+8      	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4c4:	9a 2d       	mov	r25, r10
 4c6:	99 7e       	andi	r25, 0xE9	; 233
 4c8:	a9 2e       	mov	r10, r25
 4ca:	09 c0       	rjmp	.+18     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4cc:	a2 fe       	sbrs	r10, 2
 4ce:	06 c0       	rjmp	.+12     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4d0:	b3 94       	inc	r11
 4d2:	b3 94       	inc	r11
 4d4:	04 c0       	rjmp	.+8      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4d6:	8a 2d       	mov	r24, r10
 4d8:	86 78       	andi	r24, 0x86	; 134
 4da:	09 f0       	breq	.+2      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4dc:	b3 94       	inc	r11
 4de:	a3 fc       	sbrc	r10, 3
 4e0:	11 c0       	rjmp	.+34     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4e2:	a0 fe       	sbrs	r10, 0
 4e4:	06 c0       	rjmp	.+12     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4e6:	b2 14       	cp	r11, r2
 4e8:	88 f4       	brcc	.+34     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 4ea:	28 0c       	add	r2, r8
 4ec:	92 2c       	mov	r9, r2
 4ee:	9b 18       	sub	r9, r11
 4f0:	0e c0       	rjmp	.+28     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4f2:	b2 14       	cp	r11, r2
 4f4:	60 f4       	brcc	.+24     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4f6:	b6 01       	movw	r22, r12
 4f8:	80 e2       	ldi	r24, 0x20	; 32
 4fa:	90 e0       	ldi	r25, 0x00	; 0
 4fc:	0e 94 e6 02 	call	0x5cc	; 0x5cc <fputc>
 500:	b3 94       	inc	r11
 502:	f7 cf       	rjmp	.-18     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 504:	b2 14       	cp	r11, r2
 506:	18 f4       	brcc	.+6      	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 508:	2b 18       	sub	r2, r11
 50a:	02 c0       	rjmp	.+4      	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 50c:	98 2c       	mov	r9, r8
 50e:	21 2c       	mov	r2, r1
 510:	a4 fe       	sbrs	r10, 4
 512:	10 c0       	rjmp	.+32     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 514:	b6 01       	movw	r22, r12
 516:	80 e3       	ldi	r24, 0x30	; 48
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	0e 94 e6 02 	call	0x5cc	; 0x5cc <fputc>
 51e:	a2 fe       	sbrs	r10, 2
 520:	17 c0       	rjmp	.+46     	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 522:	a1 fc       	sbrc	r10, 1
 524:	03 c0       	rjmp	.+6      	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 526:	88 e7       	ldi	r24, 0x78	; 120
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	02 c0       	rjmp	.+4      	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 52c:	88 e5       	ldi	r24, 0x58	; 88
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	b6 01       	movw	r22, r12
 532:	0c c0       	rjmp	.+24     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 534:	8a 2d       	mov	r24, r10
 536:	86 78       	andi	r24, 0x86	; 134
 538:	59 f0       	breq	.+22     	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 53a:	a1 fe       	sbrs	r10, 1
 53c:	02 c0       	rjmp	.+4      	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 53e:	8b e2       	ldi	r24, 0x2B	; 43
 540:	01 c0       	rjmp	.+2      	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 542:	80 e2       	ldi	r24, 0x20	; 32
 544:	a7 fc       	sbrc	r10, 7
 546:	8d e2       	ldi	r24, 0x2D	; 45
 548:	b6 01       	movw	r22, r12
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	0e 94 e6 02 	call	0x5cc	; 0x5cc <fputc>
 550:	89 14       	cp	r8, r9
 552:	38 f4       	brcc	.+14     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 554:	b6 01       	movw	r22, r12
 556:	80 e3       	ldi	r24, 0x30	; 48
 558:	90 e0       	ldi	r25, 0x00	; 0
 55a:	0e 94 e6 02 	call	0x5cc	; 0x5cc <fputc>
 55e:	9a 94       	dec	r9
 560:	f7 cf       	rjmp	.-18     	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 562:	8a 94       	dec	r8
 564:	f3 01       	movw	r30, r6
 566:	e8 0d       	add	r30, r8
 568:	f1 1d       	adc	r31, r1
 56a:	80 81       	ld	r24, Z
 56c:	b6 01       	movw	r22, r12
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	0e 94 e6 02 	call	0x5cc	; 0x5cc <fputc>
 574:	81 10       	cpse	r8, r1
 576:	f5 cf       	rjmp	.-22     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 578:	22 20       	and	r2, r2
 57a:	09 f4       	brne	.+2      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 57c:	42 ce       	rjmp	.-892    	; 0x202 <vfprintf+0x24>
 57e:	b6 01       	movw	r22, r12
 580:	80 e2       	ldi	r24, 0x20	; 32
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	0e 94 e6 02 	call	0x5cc	; 0x5cc <fputc>
 588:	2a 94       	dec	r2
 58a:	f6 cf       	rjmp	.-20     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 58c:	f6 01       	movw	r30, r12
 58e:	86 81       	ldd	r24, Z+6	; 0x06
 590:	97 81       	ldd	r25, Z+7	; 0x07
 592:	02 c0       	rjmp	.+4      	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 594:	8f ef       	ldi	r24, 0xFF	; 255
 596:	9f ef       	ldi	r25, 0xFF	; 255
 598:	2b 96       	adiw	r28, 0x0b	; 11
 59a:	e2 e1       	ldi	r30, 0x12	; 18
 59c:	0c 94 9c 03 	jmp	0x738	; 0x738 <__epilogue_restores__>

000005a0 <strnlen_P>:
 5a0:	fc 01       	movw	r30, r24
 5a2:	05 90       	lpm	r0, Z+
 5a4:	61 50       	subi	r22, 0x01	; 1
 5a6:	70 40       	sbci	r23, 0x00	; 0
 5a8:	01 10       	cpse	r0, r1
 5aa:	d8 f7       	brcc	.-10     	; 0x5a2 <strnlen_P+0x2>
 5ac:	80 95       	com	r24
 5ae:	90 95       	com	r25
 5b0:	8e 0f       	add	r24, r30
 5b2:	9f 1f       	adc	r25, r31
 5b4:	08 95       	ret

000005b6 <strnlen>:
 5b6:	fc 01       	movw	r30, r24
 5b8:	61 50       	subi	r22, 0x01	; 1
 5ba:	70 40       	sbci	r23, 0x00	; 0
 5bc:	01 90       	ld	r0, Z+
 5be:	01 10       	cpse	r0, r1
 5c0:	d8 f7       	brcc	.-10     	; 0x5b8 <strnlen+0x2>
 5c2:	80 95       	com	r24
 5c4:	90 95       	com	r25
 5c6:	8e 0f       	add	r24, r30
 5c8:	9f 1f       	adc	r25, r31
 5ca:	08 95       	ret

000005cc <fputc>:
 5cc:	0f 93       	push	r16
 5ce:	1f 93       	push	r17
 5d0:	cf 93       	push	r28
 5d2:	df 93       	push	r29
 5d4:	fb 01       	movw	r30, r22
 5d6:	23 81       	ldd	r18, Z+3	; 0x03
 5d8:	21 fd       	sbrc	r18, 1
 5da:	03 c0       	rjmp	.+6      	; 0x5e2 <fputc+0x16>
 5dc:	8f ef       	ldi	r24, 0xFF	; 255
 5de:	9f ef       	ldi	r25, 0xFF	; 255
 5e0:	2c c0       	rjmp	.+88     	; 0x63a <fputc+0x6e>
 5e2:	22 ff       	sbrs	r18, 2
 5e4:	16 c0       	rjmp	.+44     	; 0x612 <fputc+0x46>
 5e6:	46 81       	ldd	r20, Z+6	; 0x06
 5e8:	57 81       	ldd	r21, Z+7	; 0x07
 5ea:	24 81       	ldd	r18, Z+4	; 0x04
 5ec:	35 81       	ldd	r19, Z+5	; 0x05
 5ee:	42 17       	cp	r20, r18
 5f0:	53 07       	cpc	r21, r19
 5f2:	44 f4       	brge	.+16     	; 0x604 <fputc+0x38>
 5f4:	a0 81       	ld	r26, Z
 5f6:	b1 81       	ldd	r27, Z+1	; 0x01
 5f8:	9d 01       	movw	r18, r26
 5fa:	2f 5f       	subi	r18, 0xFF	; 255
 5fc:	3f 4f       	sbci	r19, 0xFF	; 255
 5fe:	31 83       	std	Z+1, r19	; 0x01
 600:	20 83       	st	Z, r18
 602:	8c 93       	st	X, r24
 604:	26 81       	ldd	r18, Z+6	; 0x06
 606:	37 81       	ldd	r19, Z+7	; 0x07
 608:	2f 5f       	subi	r18, 0xFF	; 255
 60a:	3f 4f       	sbci	r19, 0xFF	; 255
 60c:	37 83       	std	Z+7, r19	; 0x07
 60e:	26 83       	std	Z+6, r18	; 0x06
 610:	14 c0       	rjmp	.+40     	; 0x63a <fputc+0x6e>
 612:	8b 01       	movw	r16, r22
 614:	ec 01       	movw	r28, r24
 616:	fb 01       	movw	r30, r22
 618:	00 84       	ldd	r0, Z+8	; 0x08
 61a:	f1 85       	ldd	r31, Z+9	; 0x09
 61c:	e0 2d       	mov	r30, r0
 61e:	09 95       	icall
 620:	89 2b       	or	r24, r25
 622:	e1 f6       	brne	.-72     	; 0x5dc <fputc+0x10>
 624:	d8 01       	movw	r26, r16
 626:	16 96       	adiw	r26, 0x06	; 6
 628:	8d 91       	ld	r24, X+
 62a:	9c 91       	ld	r25, X
 62c:	17 97       	sbiw	r26, 0x07	; 7
 62e:	01 96       	adiw	r24, 0x01	; 1
 630:	17 96       	adiw	r26, 0x07	; 7
 632:	9c 93       	st	X, r25
 634:	8e 93       	st	-X, r24
 636:	16 97       	sbiw	r26, 0x06	; 6
 638:	ce 01       	movw	r24, r28
 63a:	df 91       	pop	r29
 63c:	cf 91       	pop	r28
 63e:	1f 91       	pop	r17
 640:	0f 91       	pop	r16
 642:	08 95       	ret

00000644 <__ultoa_invert>:
 644:	fa 01       	movw	r30, r20
 646:	aa 27       	eor	r26, r26
 648:	28 30       	cpi	r18, 0x08	; 8
 64a:	51 f1       	breq	.+84     	; 0x6a0 <__ultoa_invert+0x5c>
 64c:	20 31       	cpi	r18, 0x10	; 16
 64e:	81 f1       	breq	.+96     	; 0x6b0 <__ultoa_invert+0x6c>
 650:	e8 94       	clt
 652:	6f 93       	push	r22
 654:	6e 7f       	andi	r22, 0xFE	; 254
 656:	6e 5f       	subi	r22, 0xFE	; 254
 658:	7f 4f       	sbci	r23, 0xFF	; 255
 65a:	8f 4f       	sbci	r24, 0xFF	; 255
 65c:	9f 4f       	sbci	r25, 0xFF	; 255
 65e:	af 4f       	sbci	r26, 0xFF	; 255
 660:	b1 e0       	ldi	r27, 0x01	; 1
 662:	3e d0       	rcall	.+124    	; 0x6e0 <__ultoa_invert+0x9c>
 664:	b4 e0       	ldi	r27, 0x04	; 4
 666:	3c d0       	rcall	.+120    	; 0x6e0 <__ultoa_invert+0x9c>
 668:	67 0f       	add	r22, r23
 66a:	78 1f       	adc	r23, r24
 66c:	89 1f       	adc	r24, r25
 66e:	9a 1f       	adc	r25, r26
 670:	a1 1d       	adc	r26, r1
 672:	68 0f       	add	r22, r24
 674:	79 1f       	adc	r23, r25
 676:	8a 1f       	adc	r24, r26
 678:	91 1d       	adc	r25, r1
 67a:	a1 1d       	adc	r26, r1
 67c:	6a 0f       	add	r22, r26
 67e:	71 1d       	adc	r23, r1
 680:	81 1d       	adc	r24, r1
 682:	91 1d       	adc	r25, r1
 684:	a1 1d       	adc	r26, r1
 686:	20 d0       	rcall	.+64     	; 0x6c8 <__ultoa_invert+0x84>
 688:	09 f4       	brne	.+2      	; 0x68c <__ultoa_invert+0x48>
 68a:	68 94       	set
 68c:	3f 91       	pop	r19
 68e:	2a e0       	ldi	r18, 0x0A	; 10
 690:	26 9f       	mul	r18, r22
 692:	11 24       	eor	r1, r1
 694:	30 19       	sub	r19, r0
 696:	30 5d       	subi	r19, 0xD0	; 208
 698:	31 93       	st	Z+, r19
 69a:	de f6       	brtc	.-74     	; 0x652 <__ultoa_invert+0xe>
 69c:	cf 01       	movw	r24, r30
 69e:	08 95       	ret
 6a0:	46 2f       	mov	r20, r22
 6a2:	47 70       	andi	r20, 0x07	; 7
 6a4:	40 5d       	subi	r20, 0xD0	; 208
 6a6:	41 93       	st	Z+, r20
 6a8:	b3 e0       	ldi	r27, 0x03	; 3
 6aa:	0f d0       	rcall	.+30     	; 0x6ca <__ultoa_invert+0x86>
 6ac:	c9 f7       	brne	.-14     	; 0x6a0 <__ultoa_invert+0x5c>
 6ae:	f6 cf       	rjmp	.-20     	; 0x69c <__ultoa_invert+0x58>
 6b0:	46 2f       	mov	r20, r22
 6b2:	4f 70       	andi	r20, 0x0F	; 15
 6b4:	40 5d       	subi	r20, 0xD0	; 208
 6b6:	4a 33       	cpi	r20, 0x3A	; 58
 6b8:	18 f0       	brcs	.+6      	; 0x6c0 <__ultoa_invert+0x7c>
 6ba:	49 5d       	subi	r20, 0xD9	; 217
 6bc:	31 fd       	sbrc	r19, 1
 6be:	40 52       	subi	r20, 0x20	; 32
 6c0:	41 93       	st	Z+, r20
 6c2:	02 d0       	rcall	.+4      	; 0x6c8 <__ultoa_invert+0x84>
 6c4:	a9 f7       	brne	.-22     	; 0x6b0 <__ultoa_invert+0x6c>
 6c6:	ea cf       	rjmp	.-44     	; 0x69c <__ultoa_invert+0x58>
 6c8:	b4 e0       	ldi	r27, 0x04	; 4
 6ca:	a6 95       	lsr	r26
 6cc:	97 95       	ror	r25
 6ce:	87 95       	ror	r24
 6d0:	77 95       	ror	r23
 6d2:	67 95       	ror	r22
 6d4:	ba 95       	dec	r27
 6d6:	c9 f7       	brne	.-14     	; 0x6ca <__ultoa_invert+0x86>
 6d8:	00 97       	sbiw	r24, 0x00	; 0
 6da:	61 05       	cpc	r22, r1
 6dc:	71 05       	cpc	r23, r1
 6de:	08 95       	ret
 6e0:	9b 01       	movw	r18, r22
 6e2:	ac 01       	movw	r20, r24
 6e4:	0a 2e       	mov	r0, r26
 6e6:	06 94       	lsr	r0
 6e8:	57 95       	ror	r21
 6ea:	47 95       	ror	r20
 6ec:	37 95       	ror	r19
 6ee:	27 95       	ror	r18
 6f0:	ba 95       	dec	r27
 6f2:	c9 f7       	brne	.-14     	; 0x6e6 <__ultoa_invert+0xa2>
 6f4:	62 0f       	add	r22, r18
 6f6:	73 1f       	adc	r23, r19
 6f8:	84 1f       	adc	r24, r20
 6fa:	95 1f       	adc	r25, r21
 6fc:	a0 1d       	adc	r26, r0
 6fe:	08 95       	ret

00000700 <__prologue_saves__>:
 700:	2f 92       	push	r2
 702:	3f 92       	push	r3
 704:	4f 92       	push	r4
 706:	5f 92       	push	r5
 708:	6f 92       	push	r6
 70a:	7f 92       	push	r7
 70c:	8f 92       	push	r8
 70e:	9f 92       	push	r9
 710:	af 92       	push	r10
 712:	bf 92       	push	r11
 714:	cf 92       	push	r12
 716:	df 92       	push	r13
 718:	ef 92       	push	r14
 71a:	ff 92       	push	r15
 71c:	0f 93       	push	r16
 71e:	1f 93       	push	r17
 720:	cf 93       	push	r28
 722:	df 93       	push	r29
 724:	cd b7       	in	r28, 0x3d	; 61
 726:	de b7       	in	r29, 0x3e	; 62
 728:	ca 1b       	sub	r28, r26
 72a:	db 0b       	sbc	r29, r27
 72c:	0f b6       	in	r0, 0x3f	; 63
 72e:	f8 94       	cli
 730:	de bf       	out	0x3e, r29	; 62
 732:	0f be       	out	0x3f, r0	; 63
 734:	cd bf       	out	0x3d, r28	; 61
 736:	09 94       	ijmp

00000738 <__epilogue_restores__>:
 738:	2a 88       	ldd	r2, Y+18	; 0x12
 73a:	39 88       	ldd	r3, Y+17	; 0x11
 73c:	48 88       	ldd	r4, Y+16	; 0x10
 73e:	5f 84       	ldd	r5, Y+15	; 0x0f
 740:	6e 84       	ldd	r6, Y+14	; 0x0e
 742:	7d 84       	ldd	r7, Y+13	; 0x0d
 744:	8c 84       	ldd	r8, Y+12	; 0x0c
 746:	9b 84       	ldd	r9, Y+11	; 0x0b
 748:	aa 84       	ldd	r10, Y+10	; 0x0a
 74a:	b9 84       	ldd	r11, Y+9	; 0x09
 74c:	c8 84       	ldd	r12, Y+8	; 0x08
 74e:	df 80       	ldd	r13, Y+7	; 0x07
 750:	ee 80       	ldd	r14, Y+6	; 0x06
 752:	fd 80       	ldd	r15, Y+5	; 0x05
 754:	0c 81       	ldd	r16, Y+4	; 0x04
 756:	1b 81       	ldd	r17, Y+3	; 0x03
 758:	aa 81       	ldd	r26, Y+2	; 0x02
 75a:	b9 81       	ldd	r27, Y+1	; 0x01
 75c:	ce 0f       	add	r28, r30
 75e:	d1 1d       	adc	r29, r1
 760:	0f b6       	in	r0, 0x3f	; 63
 762:	f8 94       	cli
 764:	de bf       	out	0x3e, r29	; 62
 766:	0f be       	out	0x3f, r0	; 63
 768:	cd bf       	out	0x3d, r28	; 61
 76a:	ed 01       	movw	r28, r26
 76c:	08 95       	ret

0000076e <_exit>:
 76e:	f8 94       	cli

00000770 <__stop_program>:
 770:	ff cf       	rjmp	.-2      	; 0x770 <__stop_program>
